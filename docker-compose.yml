services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
      #PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres:/data/postgres
      # - postgres-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to. Scribe is disabled by default.
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    # environment:
      #- STORAGE_TYPE=mysql
      # Point the zipkin at the storage backend
      #- MYSQL_HOST=mysql
      # Uncomment to enable scribe
      # - SCRIBE_ENABLED=true
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      # - JAVA_OPTS=-Dlogging.level.zipkin2=DEBUG
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - "9411:9411"
      # Uncomment if you set SCRIBE_ENABLED=true
      # - 9410:9410
    #depends_on:
     # - storage
    networks:
      - spring


  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - mq

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped


  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    networks:
      - kafka
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes


  kafka:
    container_name: kafka
    image: 'bitnami/kafka:latest'
    networks:
      - kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper




  eureka-server:
    container_name: eureka-server
    image: samuelest/eureka-server:latest
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - zipkin

  apigw:
    container_name: apigw
    image: samuelest/apigw:latest
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - zipkin
      - eureka-server

  customer:
    container_name: customer
    image: samuelest/customer:latest
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - postgres
      - spring
      - mq
      - kafka
    depends_on:
      - zipkin
      #- eureka-server
      - fraud
      - rabbitmq
      - postgres
      - kafka

  fraud:
    container_name: fraud
    image: samuelest/fraud:latest
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - postgres
      - spring
    depends_on:
      - zipkin
      #- eureka-server
      - postgres

  notifications:
    container_name: notifications
    image: samuelest/notifications:latest
    ports:
      - "8088:8088"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - postgres
      - spring
      - mq
    depends_on:
      - zipkin
      #- eureka-server
      - rabbitmq
      - postgres

  messages:
    container_name: messages
    image: samuelest/messages:latest
    ports:
      - "8090:8090"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - postgres
      - spring
      - kafka
    depends_on:
      - zipkin
      #- eureka-server
      - fraud
      - rabbitmq
      - postgres
      - kafka

networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge
  mq:
    driver: bridge
  kafka:
    driver: bridge

volumes:
  postgres:
  pgadmin:

#volumes:
#  postgres-db-data:
#    name: postgres-db-data
#  pgadmin: